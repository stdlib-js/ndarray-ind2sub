// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{primitives as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer-array@v0.1.0-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.1.1-esm/index.mjs";import s,{assign as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ind2sub@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-order@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-index-mode@v0.1.1-esm/index.mjs";var l="throw",u="row-major";function g(e,r){return d(r)?a(r,"mode")&&(e.mode=r.mode,!p(e.mode))?new TypeError(o("invalid option. `%s` option must be a supported/recognized mode. Option: `%s`.","mode",e.mode)):a(r,"order")&&(e.order=r.order,!m(e.order))?new TypeError(o("invalid option. `%s` option must be a supported/recognized order. Option: `%s`.","order",e.order)):null:new TypeError(o("invalid argument. Options argument must be an object. Value: `%s`.",r))}function j(e,i,d){var a,m;if((a={}).mode=l,a.order=u,arguments.length>2&&(m=g(a,d)))throw m;if(!r(e))throw new TypeError(o("invalid argument. Shape argument must be an array-like object containing nonnegative integers. Value: `%s`.",e));if(!t(i))throw new TypeError(o("invalid argument. Linear index must be integer valued. Value: `%s`.",i));return s(e,n(e,a.order),0,a.order,i,a.mode)}function h(e,s,d,a){var m,p,j;if((m={}).mode=l,m.order=u,4===arguments.length){if(j=g(m,arguments[2]))throw j;if("object"!=typeof a||null===a)throw new TypeError(o("invalid argument. Output argument must be either an array, typed array, or object. Value: `%s`.",a));p=a}else if("object"!=typeof(p=d)||null===p)throw new TypeError(o("invalid argument. Output argument must be either an array, typed array, or object. Value: `%s`.",p));if(!r(e))throw new TypeError(o("invalid argument. Shape argument must be an array-like object containing nonnegative integers. Value: `%s`.",e));if(!t(s))throw new TypeError(o("invalid argument. Linear index must be integer valued. Value: `%s`.",s));return i(e,n(e,m.order),0,m.order,s,m.mode,p)}e(j,"assign",h);export{h as assign,j as default};
//# sourceMappingURL=index.mjs.map
